#include <iostream>
#include <cmath>
#include <algorithm>

class Triangle {
private:
    double a, b, c;

public:
    Triangle(double sideA, double sideB, double sideC) {
        a = sideA;
        b = sideB;
        c = sideC;
    }

    double getPerimeter() {
        return a + b + c;
    }

    double getArea() {
        double s = getPerimeter() / 2.0;
        return std::sqrt(s * (s - a) * (s - b) * (s - c));
    }

    bool isRightAngled() {
        double sides[3] = {a, b, c};
        std::sort(sides, sides + 3);
        return std::abs((sides[0]*sides[0] + sides[1]*sides[1]) - (sides[2]*sides[2])) < 1e-6;
    }
};

int main() {
    Triangle t(3, 4, 5);

    std::cout << "Perimeter: " << t.getPerimeter() << std::endl;
    std::cout << "Area: " << t.getArea() << std::endl;
    std::cout << "Is right-angled: " << (t.isRightAngled() ? "Yes" : "No") << std::endl;

    return 0;
}
